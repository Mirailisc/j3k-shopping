name: Deploy

on:
  workflow_dispatch:

jobs:
  docker-build:
    name: Publish Docker image to registry
    runs-on: ubuntu-24.04

    permissions:
      contents: read
      security-events: write
      actions: read

    steps:
      - uses: actions/checkout@v4

      - name: Tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.tailscale_client_id }}
          oauth-secret: ${{ secrets.tailscale_client_secret }}
          tags: tag:ci

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Private registry
        uses: docker/login-action@v3
        with:
          registry: ${{secrets.docker_registry}}
          username: ${{ secrets.docker_username }}
          password: ${{ secrets.docker_password }}

      - name: Shorter SHA
        shell: bash
        run: |
          echo "sha_short=$(git rev-parse --short "${{ github.sha }}")" >> "$GITHUB_ENV"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{secrets.docker_registry}}/${{ secrets.image_name }}:${{ env.sha_short }},  ${{secrets.docker_registry}}/${{ secrets.image_name }}:latest

  update-manifest:
    name: Update Kubernetes manifest
    runs-on: ubuntu-24.04
    needs: [docker-build]

    permissions:
      contents: read
      security-events: write
      actions: read

    steps:
      - uses: actions/checkout@v4
        with:
          repository: KronosMoe/kronos-helm
          ref: "main"
          token: ${{ secrets.token }}

      - name: Shorter SHA
        shell: bash
        run: |
          echo "sha_short=$(git rev-parse --short "${{ github.sha }}")" >> "$GITHUB_ENV"

      - name: Git config
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
          echo ${{ env.sha_short }}
          sed -i "s#appVersion.*#appVersion: ${{ env.sha_short }}#g" ${{ secrets.image_name }}/Chart.yaml
          git add -A
          git commit -am "update ${{ secrets.image_name }} image to version ${{ env.sha_short }}"

      - run: echo ${{ github }}
      - run: git push origin main
